---

# Context configuration example, to be copied and adapted to your context (local, staging,...). Values do
# not have be encrypted or base64 encoded, ansible is taking care of that in the templates. Context files are
# ignored and won't be commited.

# Context name, must match a context in your .kube/config file
context: example

# Components to be installed in your cluster
# Priorities defined here are used to control the order in which the components are installed. It starts from 10
# and then increases by steps of 10. For the moment, we use the following priorities:
#   10: ingress controllers
#   20: important cluster components (cert-manager, prometheus,...)
#   30: data stores and similar tools (mariadb, postgres, redis,...)
#   40: monitoring and security tools
#   50: administration tools (kubernetes-dashboard, pgadmin,...)
#   60: automation and deployment tools (gitlab, harbor, rundeck,...)
#   70: other tools (dokuwiki, mattermost,...)
components:
  certmanager:
    enabled: true
    type: security
    priority: 20
  dashboard:
    enabled: false
    type: administration
    priority: 50
  dokuwiki:
    enabled: false
    type: communication
    priority: 70
  gitea:
    enabled: false
    type: deployment
    priority: 60
  grafana:
    enabled: false
    type: monitoring
    priority: 40
  mariadb:
    enabled: false
    type: datastore
    priority: 30
  mattermost:
    enabled: false
    type: communication
    priority: 70
  nats:
    enabled: false
    type: messaging
    priority: 30
  nginx:
    enabled: true
    type: ingress
    priority: 10
  phpmyadmin:
    enabled: false
    type: administration
    priority: 50
  pgadmin:
    enabled: false
    type: administration
    priority: 50
  postgresql:
    enabled: false
    type: datastore
    priority: 30
  prometheus:
    enabled: false
    type: monitoring
    priority: 20
  redis:
    enabled: false
    type: datastore
    priority: 30
  rabbitmq:
    enabled: false
    type: messaging
    priority: 30
  rundeck:
    enabled: false
    type: automation
    priority: 60
  wiki:
    enabled: false
    type: communication
    priority: 70

# Cluster configuration
kubernetes_extra_namespaces: []
kubernetes_extra_service_accounts: []

# Organization details
organization: My Organization
domain: example.com
email_domain: example.com

# Ingress configuration
ingress_class: nginx
ingress_replicas: 1
ingress_service_ip: 127.0.0.1
ingress_service_type: LoadBalancer

# Nginx ingress configuration
ingress_nginx_autoscaling_enabled: false
ingress_nginx_autoscaling_max_replicas: 2
ingress_nginx_autoscaling_min_replicas: 1
ingress_nginx_autoscaling_target_cpu_utilization: 75
ingress_nginx_autoscaling_target_ram_utilization: 75
ingress_nginx_config: {}
ingress_nginx_extra_args: {}
ingress_nginx_headers: {}
ingress_nginx_kind: Deployment
ingress_nginx_metrics_enabled: true
ingress_nginx_metrics_port: 10254
ingress_nginx_min_available: 1
ingress_nginx_proxy_headers: {}

# MariaDB configuration
mariadb_metrics_enabled: true
mariadb_persistence_enabled: false
mariadb_persistence_size: 8Gi
mariadb_replicas: 1
mariadb_replication_user: replicator
mariadb_replication_password:
mariadb_root_password:

# PostgreSQL configuration
postgresql_admin_user: postgres
postgresql_admin_password:
postgresql_metrics_enabled: true
postgresql_persistence_enabled: false
postgresql_persistence_size: 10Gi
postgresql_replicas: 1
postgresql_replication_enabled: false
postgresql_replication_user: replicator
postgresql_replication_password:

# pgAdmin configuration
pgadmin_admin_email: "admin@{{ email_domain }}"
pgadmin_admin_password:
pgadmin_persistence_enabled: false
pgadmin_persistence_size: 5Gi

# Redis configuration
redis_persistence_enabled: false
redis_persistence_size: 5Gi

# Grafana configuration
grafana_admin_user: admin
grafana_admin_password: grafana
grafana_database_enabled: false
grafana_database_name: grafana
grafana_database_user:
grafana_database_password:
grafana_oauth_enabled: false
grafana_oauth_client_id:
grafana_oauth_client_secret:
grafana_persistence_enabled: false
grafana_persistence_size: 10Gi

# RabbitMQ configuration
rabbitmq_admin_user: admin
rabbitmq_admin_password:
rabbitmq_erlang_cookie:
rabbitmq_persistence_enabled: false
rabbitmq_persistence_size: 10Gi
rabbitmq_plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"

# Gitea configuration
gitea_admin_user: gitea
gitea_admin_password:
gitea_admin_email: "admin@{{ email_domain }}"
gitea_config_password_complexity: "lower,upper,digit,spec"
gitea_database_name: gitea
gitea_database_user: gitea
gitea_database_password:
gitea_persistence_enabled: false
gitea_persistence_size: 10Gi
gitea_replicas: 1
gitea_ssh_port: 2223

# DokuWiki configuration
dokuwiki_admin_user: admin
dokuwiki_admin_email: "admin@{{ email_domain }}"
dokuwiki_admin_password:
dokuwiki_admin_name: "Administrator"
dokuwiki_metrics_enabled: true
dokuwiki_persistence_enabled: false
dokuwiki_persistence_size: 8Gi

# Wiki configuration
wiki_database_name: wiki
wiki_database_user: wiki
wiki_database_password:

# Rundeck configuration
rundeck_database_name: rundeck
rundeck_database_user: rundeck
rundeck_database_password:
rundeck_persistence_enabled: false
rundeck_persistence_size: 5Gi

# Mattermost configuration
mattermost_database_name: mattermost
mattermost_database_user: mattermost
mattermost_database_password:
